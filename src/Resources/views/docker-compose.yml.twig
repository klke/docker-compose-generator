version: '2'
services:

{% if services.nginx.enabled %}
    nginx:
        image: nginx:{{ services.nginx.version }}
        container_name: {{ mutex }}-nginx
        ports:
            - {{ services.nginx.port }}:80
        networks:
          - symfony

        {% if services.php.enabled %}

        depends_on:
            - php
        {% endif %}

        volumes:
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
            - ./:/var/www/symfony:cached
            - ./docker/nginx/logs:/var/log/nginx:cached

{% endif %}

{% if services.php.enabled %}
    php:
        image: php:{{ services.php.version }}
        container_name: {{ mutex }}-php-fpm
        ports:
            - {{ services.php.port }}:9000
        networks:
          - symfony
        volumes:
            - ./:/var/www/symfony:cached
            - ./docker/php/logs:/var/www/symfony/var/log:cached
        environment:
            XDEBUG_CONFIG: remote_host=host.docker.internal remote_port={{ services.php.port }} remote_enable=1
        {% if services.mysql.enabled %}

        depends_on:
            - mysql
        {% endif %}



{% endif %}

{% if services.mysql.enabled %}
    mysql:
        container_name: {{ mutex }}-mysql
        image: mysql:{{ services.mysql.version }}
        volumes:
          - ./docker/mysql/data:/var/lib/mysql
          - ./docker/mysql/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf
        expose:
          - {{ services.mysql.port }}
        ports:
          - {{ services.mysql.port }}:3306
        networks:
          - symfony
        {% if services.mysql.options|length > 0 %}environment:{% endif %}

        {% for key, value in services.mysql.options %}
        - {{ key }}={{ value }}
        {% endfor %}
{% endif %}

{% if services.redis.enabled %}
    redis:
        container_name: {{ mutex }}-redis
        image: redis:{{ services.redis.version }}
        expose:
          - {{ services.redis.port }}
        ports:
          - {{ services.redis.port }}:6379
        networks:
          - symfony
        {% if services.redis.options|length > 0 %}environment:{% endif %}

        {% for key, value in services.redis.options %}
        - {{ key }}={{ value }}
        {% endfor %}
{% endif %}

{% if services.elasticsearch.enabled %}
    elasticsearch:
        container_name: {{ mutex }}-elastic
        image: docker.elastic.co/elasticsearch/elasticsearch:{{ services.elasticsearch.version }}
        expose:
          - {{ services.elasticsearch.port }}
        ports:
          - {{ services.elasticsearch.port }}:9200
        networks:
          - symfony
        {% if services.elasticsearch.options|length > 0 %}environment:{% endif %}

        {% for key, value in services.elasticsearch.options %}
        - {{ key }}={{ value }}
        {% endfor %}
{% endif %}

{% if services.kibana.enabled %}
    kibana:
        container_name: {{ mutex }}-kibana
        image: docker.elastic.co/kibana/kibana:{{ services.kibana.version }}
        expose:
          - {{ services.kibana.port }}
        ports:
          - {{ services.kibana.port }}:5601
        depends_on:
          - elasticsearch
        {% if services.kibana.options|length > 0 %}environment:{% endif %}

        {% for key, value in services.kibana.options %}
        - {{ key }}={{ value }}
        {% endfor %}
        - ELASTICSEARCH_HOSTS=http://elasticsearch:{{ services.elasticsearch.port }}
{% endif %}

{% if services.mongodb.enabled %}
    mongodb:
        container_name: {{ mutex }}-mongodb
        image: mongo:{{ services.mongodb.version }}
        volumes:
           - ./docker/mongodb/data/db:/data/db
        expose:
           - {{ services.mongodb.port }}
        ports:
           - {{ services.mongodb.port }}:27017
        command: mongod --logpath=/dev/null # --quiet
        networks:
          - symfony
        {% if services.mongodb.options|length > 0 %}environment:{% endif %}

        {% for key, value in services.mongodb.options %}
        - {{ key }}={{ value }}
        {% endfor %}

{% endif %}

{% if services.rabbitmq.enabled %}
    rabbitmq:
        container_name: {{ mutex }}-rabbitmq
        image: rabbitmq:{{ services.rabbitmq.version }}
        volumes:
          - "./docker/rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins"
        expose:
          - {{ services.rabbitmq.extra_ports.rabbitmq_manager }}
        ports:
          - {{ services.rabbitmq.extra_ports.rabbitmq_manager }}:15672
          - {{ services.rabbitmq.port }}:5672
        networks:
          - symfony
        {% if services.rabbitmq.options|length > 0 %}environment:{% endif %}

        {% for key, value in services.rabbitmq.options %}
        - {{ key }}={{ value }}
        {% endfor %}

{% endif %}

networks:
    symfony:
        driver: bridge
